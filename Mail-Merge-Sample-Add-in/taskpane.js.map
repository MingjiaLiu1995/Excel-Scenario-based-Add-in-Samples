{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/compat get default export","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t41: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\nOffice.onReady((info) => {\n  // Check that we loaded into Excel\n  if (info.host === Office.HostType.Excel) {\n    document.getElementById(\"sendEmail\").onclick = sendEmail;\n    document.getElementById(\"createSampleData\").onclick = createSampleData;\n  }\n});\n\nclass DialogAPIAuthProvider {\n  async getAccessToken() {\n    if (this._accessToken) {\n      return this._accessToken;\n    } else {\n      return this.login();\n    }\n  }\n\n  async login() {\n    return new Promise((resolve, reject) => {\n      const dialogLoginUrl = location.href.substring(0, location.href.lastIndexOf('/')) + '/consent.html';\n      Office.context.ui.displayDialogAsync(\n        dialogLoginUrl,\n        { height: 60, width: 60 },\n        result => {\n          if (result.status === Office.AsyncResultStatus.Failed) {\n            reject(result.error);\n          }\n          else {\n            const loginDialog = result.value;\n\n            loginDialog.addEventHandler(Office.EventType.DialogEventReceived, args => {\n              reject(args.error);\n            });\n\n            loginDialog.addEventHandler(Office.EventType.DialogMessageReceived, args => {\n              const messageFromDialog = JSON.parse(args.message);\n\n              loginDialog.close();\n\n              if (messageFromDialog.status === 'success') {\n                // We now have a valid access token.\n                this._accessToken = messageFromDialog.result;\n                resolve(this._accessToken);\n              }\n              else {\n                // Something went wrong with authentication or the authorization of the web application.\n                reject(messageFromDialog.result);\n              }\n            });\n          }\n        }\n      );\n    });\n  }\n}\n\nconst dialogAPIAuthProvider = new DialogAPIAuthProvider();\n\n// Display a status\n/**\n * @param {unknown} message\n * @param {boolean} isError\n */\nfunction showStatus(message, isError) {\n  $('.status').empty();\n  $('<div/>', {\n    class: `status-card ms-depth-4 ${isError ? 'error-msg' : 'success-msg'}`\n  }).append($('<p/>', {\n    class: 'ms-fontSize-24 ms-fontWeight-bold',\n    text: isError ? 'An error occurred' : 'Success'\n  })).append($('<p/>', {\n    class: 'ms-fontSize-16 ms-fontWeight-regular',\n    text: message\n  })).appendTo('.status');\n}\n\n// Clear the status\nfunction clearStatus() {\n  $('.status').empty();\n}\n\n// Create Sample Data\nasync function createSampleData() {\n  try {\n    await Excel.run(async (context) => {\n      context.workbook.worksheets.getItemOrNullObject(\"Sample\").delete();\n      const sheet = context.workbook.worksheets.add(\"Sample\");\n\n      let invoiceTable = sheet.tables.add(\"A1:E1\", true);\n      invoiceTable.name = \"InvoiceTable\";\n      let range = invoiceTable.getRange();\n      range.numberFormat = \"@\";\n      invoiceTable.getHeaderRowRange().values = [[\"Email\", \"Name\", \"Invoice Number\", \"Amount\", \"Due Date\"]];\n\n      invoiceTable.rows.add(0, [\n        [\"client1@email.com\", \"John\", \"INV001\", \"$500\", \"2023-11-15\"],\n        [\"client2@email.com\", \"Sarah\", \"INV002\", \"$750\", \"2023-11-20\"],\n        [\"client3@microsoft.com\", \"Michael\", \"INV003\", \"$300\", \"2023-11-10\"],\n        [\"client4@microsoft.com\", \"Lisa\", \"INV004\", \"$900\", \"2023-11-15\"]\n      ]);\n\n      invoiceTable.getRange().format.autofitColumns();\n      invoiceTable.getRange().format.autofitRows();\n\n      sheet.activate();\n      await context.sync();\n    });\n  } catch (error) {\n    showStatus(`Exception when creating sample data: ${JSON.stringify(error)}`, true);\n  }\n}\n\n// Use regular expressions to get text within <<...>>\n/**\n * \n * @param {*} str \n * @returns \n */\nfunction getStr(str) {\n  var result = str.match(/\\<\\<(.*?)\\>\\>/g);\n  if (result) {\n    for (var i = 0; i < result.length; i++) {\n      result[i] = result[i].replace(/\\<\\<|\\>\\>/g, '');\n    }\n    return result[0];\n  }\n}\n\n// <SendEmailSnippet>\n/**\n * @param {{ preventDefault: () => void; }} evt\n */\nasync function sendEmail(evt) {\n\n  evt.preventDefault();\n  clearStatus();\n\n  const graphClient = MicrosoftGraph.Client.initWithMiddleware({ authProvider: dialogAPIAuthProvider });\n\n  await Excel.run(async (context) => {\n\n    try {\n      const subject = $('#Subject').val();\n      const to = $('#ToLine').val();\n      const content = $('#Content').val();\n\n      if (to && subject && content) {\n        var emailAddress = getStr(to);\n\n        if (emailAddress != null) {\n          const addressColumn = context.workbook.tables.getItem(\"InvoiceTable\").columns.getItemOrNullObject(emailAddress);\n          addressColumn.load();\n          await context.sync();\n\n          if (!addressColumn.isNullObject) {\n            let i = 1;\n            let addressValue = addressColumn.values;\n            let subject_str = subject.toString();\n\n            // Scan the table and send emails row by row\n            while (i < addressValue.length) {\n              let finalSubject = '';\n              //Replace the column name in the subject textarea with the corresponding value in the table\n              for (let j = 0; j < subject_str.length; j++) {\n                if (subject_str[j] == \"<\") {\n                  let replace_str = getStr(subject_str.substring(j));\n                  let replaceColumn = context.workbook.tables.getItem(\"InvoiceTable\").columns.getItemOrNullObject(replace_str);\n                  replaceColumn.load();\n                  await context.sync();\n\n                  if (!replaceColumn.isNullObject) {\n                    let replaceValue = replaceColumn.values;\n                    finalSubject += replaceValue[i][0];\n\n                    while (j < subject_str.length) {\n                      if (subject_str[j] == \">\") {\n                        j += 1;\n                        break;\n                      }\n                      j += 1;\n                    }\n                  }\n                  else {\n                    showStatus(`There is no corresponding column name as \"${replace_str}\" in Subject.`, true);\n                    return;\n                  }\n                }\n                else {\n                  finalSubject += subject_str[j];\n                }\n              }\n\n              //Replace the column name in the content textarea with the corresponding value in the table\n              let content_str = content.toString();\n              let finalContent = '';\n              for (let k = 0; k < content_str.length; k++) {\n                if (content_str[k] == \"<\") {\n                  let replace_str = getStr(content_str.substring(k));\n                  let replaceColumn = context.workbook.tables.getItem(\"InvoiceTable\").columns.getItemOrNullObject(replace_str);\n                  replaceColumn.load();\n                  await context.sync();\n\n                  if (!replaceColumn.isNullObject) {\n                    let replaceValue = replaceColumn.values;\n                    finalContent += replaceValue[i][0];\n                    while (k < content_str.length) {\n                      if (content_str[k] == \">\") {\n                        k += 1;\n                        break;\n                      }\n                      k += 1;\n                    }\n                  }\n                  else {\n                    showStatus(`There is no corresponding column name as \"${replace_str}\" in Content.`, true);\n                    return;\n                  }\n                }\n                else {\n                  finalContent += content_str[k];\n                }\n              }\n\n              try {\n\n                const sendMail =\n                {\n                  message: {\n                    subject: finalSubject,\n                    body: {\n                      contentType: 'Text',\n                      content: finalContent\n                    },\n                    toRecipients: [{\n                      emailAddress: {\n                        address: addressValue[i][0]\n                      }\n                    }]\n                  }\n                };\n\n                await graphClient.api('me/SendMail')\n                  .post(sendMail);\n              }\n              catch (error) {\n                console.log(`Error: ${JSON.stringify(error)}`);\n                showStatus(`Exception sending emails via Graph: ${JSON.stringify(error)}`, true);\n              }\n\n              i++;\n            }\n            showStatus(`Already sent ${i - 1} emails via Microsoft Graph.`, false);\n          }\n          else {\n            showStatus(`There is no corresponding column name as \"${emailAddress}\" in ToLine.`, true);\n          }\n        }\n        else {\n          showStatus(`There is no corresponding column name in ToLine.`, true);\n        }\n      }\n      else {\n        showStatus(`Please fill in all the fields.`, true);\n      }\n    } catch (error) {\n      console.log(`Error: ${JSON.stringify(error)}`);\n      showStatus(`Exception sending emails via Graph: ${JSON.stringify(error)}`, true);\n    }\n\n  })\n}\n// </SendEmailSnippet>","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar code = \"<!DOCTYPE html> <html> <head> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://alcdn.msauth.net/browser/2.35.0/js/msal-browser.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/@microsoft/microsoft-graph-client/lib/graph-js-sdk.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link rel=\\\"stylesheet\\\" href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\"/> <title>Contoso Mail Merge</title> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> </head> <body> <h1>Contoso Mail Merge </h1> <p>Please following the steps below: </p> <p></p> <p><strong> 1: Generate a Sample Email Template and Sample Data </strong></p> <p>Click \\\"Create Sample Data\\\" to generate a sample email template in Outlook and sample data in Excel. </p> <button type=\\\"button\\\" id=\\\"createSampleData\\\">Create Sample Data</button> <p><strong>Step 2: Verify Template and Data </strong></p> <p>Check the template email below. Note that the parameter name inside &lt;&lt;...&gt;&gt; must match the name of the column in your current spreadsheet. </p> <P> <form method=\\\"post\\\" action=\\\"\\\"> <p><strong>To : </strong></p> <p><textarea id=\\\"ToLine\\\" cols=\\\"50\\\" rows=\\\"1\\\" class=\\\"html-text-box\\\">&lt;&lt;Email&gt;&gt;</textarea></p> <p><strong>Subject : </strong></p> <p><textarea id=\\\"Subject\\\" cols=\\\"50\\\" rows=\\\"1\\\" class=\\\"html-text-box\\\">Invoice &lt;&lt;Invoice Number&gt;&gt; for &lt;&lt;Name&gt;&gt;</textarea></p> <p><strong>Content : </strong></p> <p><textarea id=\\\"Content\\\" cols=\\\"50\\\" rows=\\\"10\\\" class=\\\"html-text-box\\\">\\nDear &lt;&lt;Name&gt;&gt;,\\n\\nWe have issued an invoice for your account. Please find the details below:  \\n                        \\n    Invoice Number: &lt;&lt;Invoice Number&gt;&gt;  \\n    Amount Due: &lt;&lt;Amount&gt;&gt;  \\n    Due Date: &lt;&lt;Due Date&gt;&gt;  \\n                        \\nIf you have any questions or concerns, please don't hesitate to contact us.  \\n                        \\nBest regards,  \\nContoso Corporation\\n            </textarea></p> </form> </P> <p><strong>Step 3: Send Emails </strong></p> <p>Click \\\"Send emails\\\" to send email in bulk using the data in the current spreadsheet. Alternatively, click \\\"Create Draft\\\" to check emails in your Outlook draft before sending them </p> <button type=\\\"button\\\" id=\\\"sendEmail\\\">Send Email</button> <div style=\\\"height:1px;width:1px\\\"> <img src=\\\"https://pnptelemetry.azurewebsites.net/pnp-officeaddins/samples/excel-add-in-mail-merge\\\"> </div> </body> <div class=\\\"status\\\"></div> <\" + \"script src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\"><\" + \"/script> </html>\";\n// Exports\nexport default code;"],"names":["module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","t","r","value","Symbol","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","args","arguments","apply","err","_defineProperties","target","props","descriptor","input","hint","prim","toPrimitive","res","_toPrimitive","Office","onReady","host","HostType","Excel","getElementById","onclick","sendEmail","createSampleData","DialogAPIAuthProvider","instance","Constructor","_classCallCheck","protoProps","_login","_getAccessToken","_callee","_context","_accessToken","login","_callee2","_this","_context2","dialogLoginUrl","substring","lastIndexOf","context","ui","displayDialogAsync","height","width","result","status","AsyncResultStatus","Failed","loginDialog","addEventHandler","EventType","DialogEventReceived","DialogMessageReceived","messageFromDialog","JSON","parse","message","close","dialogAPIAuthProvider","showStatus","isError","$","empty","class","append","text","appendTo","_createSampleData","_callee4","_context4","run","_ref","_callee3","sheet","invoiceTable","_context3","workbook","worksheets","getItemOrNullObject","delete","add","tables","getRange","numberFormat","getHeaderRowRange","rows","format","autofitColumns","autofitRows","activate","sync","_x2","t0","stringify","getStr","str","match","_x","_sendEmail","_callee6","evt","graphClient","_context6","preventDefault","MicrosoftGraph","Client","initWithMiddleware","authProvider","_ref2","_callee5","subject","to","content","emailAddress","addressColumn","addressValue","subject_str","finalSubject","j","replace_str","replaceColumn","replaceValue","content_str","finalContent","k","_replace_str","_replaceColumn","_replaceValue","sendMail","_context5","val","getItem","columns","load","isNullObject","toString","body","contentType","toRecipients","address","api","post","console","log","t1","_x3","___HTML_LOADER_IMPORT_0___","URL","___HTML_LOADER_IMPORT_1___"],"sourceRoot":""}